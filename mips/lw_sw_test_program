//This would be the output of an assembler which translate my
//assembly program
//lw $t0, 0($2)
//lw $t1, 4($2)
//sw $t1, 0($2)
//sw $t0, 4($2)
//assembly > assembler > object file > linker > executable > loader > memory
//this will be the MPU's instruction set to be loaded into memory
//so this is MIPS specific machine language
//these are i-type instructions
//lw has an opcode of 35
//e.g.: 
//lw $s3, -24($s4)
//op=35, rs=20, rt=19, imm=-24
//0x8E93FFE8
//1000 1110 1001 0011 1111 1111 1110 1000
//
//lw $s0, 0($s0) => 35, 0, 0, 0 => 1000 1000 0000 0000 0000 0000 0000 0000  => 88000000
//$t0-$t7 == reg[8..15]
//$s0-$s7 == reg[16..23]
//$t8-$t9 == reg[24..25]
// so $s0 == reg[16]
/*100011_00110_10010_0000_0000_0000_0000 //lw  $s2, 0($6)   s2 is 18*/
//1000 11ss ssst tttt iiii iiii iiii iiii
//lw $28, 0($0) => 0x8c1c0000
/*100011_00000_11100_0000000000000000 // $28 = dmem[0]
100011_00001_11101_0000000000000000 // $29 = dmem[1]
100011_00010_11110_0000000000000000 // $30 = dmem[2]
100011_00011_11111_0000000000000000 // $31 = dmem[3]


*/
100011_00000_11100_0000000000000000 //dest=11100=28, source=0(0)=-31
100011_00000_11101_0000000000000001 //dest=11100=29, source=1(0)
100011_00000_11110_0000000000000010 //dest=11100=30, source=2(0)
100011_00000_11111_0000000000000011 //dest=11100=31, source=3(0)-28
